--- strftime.c.orig	2004-11-25 11:38:45.000000000 -0800
+++ strftime.c	2005-02-27 16:07:41.000000000 -0800
@@ -25,6 +25,8 @@
 #endif /* !defined NOID */
 #endif /* !defined lint */
 
+#include "xlocale_private.h"
+
 #include "namespace.h"
 #include "private.h"
 
@@ -35,19 +37,26 @@
 __FBSDID("$FreeBSD: src/lib/libc/stdtime/strftime.c,v 1.40 2004/06/14 10:31:52 stefanf Exp $");
 
 #include "tzfile.h"
+#include <time.h>
 #include <fcntl.h>
 #include <sys/stat.h>
 #include "un-namespace.h"
 #include "timelocal.h"
 
+#if !BUILDING_VARIANT
 static char *	_add(const char *, char *, const char *);
-static char *	_conv(int, const char *, char *, const char *);
-static char *	_fmt(const char *, const struct tm *, char *, const char *, int *);
+static char *	_conv(int, const char *, char *, const char *, locale_t);
+#endif /* !BUILDING_VARIANT */
+#define	_fmt	_st_fmt
+__private_extern__ char *_fmt(const char *, const struct tm *, char *, const char *, int *, struct lc_time_T *, locale_t);
 
 size_t strftime(char * __restrict, size_t, const char * __restrict,
     const struct tm * __restrict);
 
 extern char *	tzname[];
+__private_extern__ long __darwin_altzone;		/* DST timezone offset */
+#define altzone __darwin_altzone
+__private_extern__ long _st_get_timezone(void);
 
 #ifndef YEAR_2000_NAME
 #define YEAR_2000_NAME	"CHECK_STRFTIME_FORMATS_FOR_TWO_DIGIT_YEARS"
@@ -60,29 +69,40 @@
 #define IN_ALL	3
 
 size_t
-strftime(char * __restrict s, size_t maxsize, const char * __restrict format,
-    const struct tm * __restrict t)
+strftime_l(char * __restrict s, size_t maxsize, const char * __restrict format,
+    const struct tm * __restrict t, locale_t loc)
 {
 	char *	p;
 	int	warn;
+#if __DARWIN_UNIX03
+	struct tm t2;
+#endif /* __DARWIN_UNIX03 */
 
+	NORMALIZE_LOCALE(loc);
 	tzset();
 	warn = IN_NONE;
-	p = _fmt(((format == NULL) ? "%c" : format), t, s, s + maxsize, &warn);
+#if __DARWIN_UNIX03
+	if (t->tm_isdst >= 0) {
+		t2 = *t;
+		t2.tm_gmtoff = t->tm_isdst ? -__darwin_altzone : -_st_get_timezone();
+		t = &t2;
+	}
+#endif /* __DARWIN_UNIX03 */
+	p = _fmt(((format == NULL) ? "%c" : format), t, s, s + maxsize, &warn, __get_current_time_locale(loc), loc);
 #ifndef NO_RUN_TIME_WARNINGS_ABOUT_YEAR_2000_PROBLEMS_THANK_YOU
 	if (warn != IN_NONE && getenv(YEAR_2000_NAME) != NULL) {
-		(void) fprintf(stderr, "\n");
+		(void) fputs("\n", stderr);
 		if (format == NULL)
-			(void) fprintf(stderr, "NULL strftime format ");
-		else	(void) fprintf(stderr, "strftime format \"%s\" ",
+			(void) fputs("NULL strftime format ", stderr);
+		else	(void) fprintf_l(stderr, loc, "strftime format \"%s\" ",
 				format);
-		(void) fprintf(stderr, "yields only two digits of years in ");
+		(void) fputs("yields only two digits of years in ", stderr);
 		if (warn == IN_SOME)
-			(void) fprintf(stderr, "some locales");
+			(void) fputs("some locales", stderr);
 		else if (warn == IN_THIS)
-			(void) fprintf(stderr, "the current locale");
-		else	(void) fprintf(stderr, "all locales");
-		(void) fprintf(stderr, "\n");
+			(void) fputs("the current locale", stderr);
+		else	(void) fputs("all locales", stderr);
+		(void) fputs("\n", stderr);
 	}
 #endif /* !defined NO_RUN_TIME_WARNINGS_ABOUT_YEAR_2000_PROBLEMS_THANK_YOU */
 	if (p == s + maxsize)
@@ -91,16 +111,25 @@
 	return p - s;
 }
 
-static char *
-_fmt(format, t, pt, ptlim, warnp)
+size_t
+strftime(char * __restrict s, size_t maxsize, const char * __restrict format,
+    const struct tm * __restrict t)
+{
+	return strftime_l(s, maxsize, format, t, __current_locale());
+}
+
+#ifndef BUILDING_VARIANT
+__private_extern__ char *
+_fmt(format, t, pt, ptlim, warnp, tptr, loc)
 const char *		format;
 const struct tm * const	t;
 char *			pt;
 const char * const	ptlim;
 int *			warnp;
+struct lc_time_T *	tptr;
+locale_t		loc;
 {
 	int Ealternative, Oalternative;
-	struct lc_time_T *tptr = __get_current_time_locale();
 
 	for ( ; *format; ++format) {
 		if (*format == '%') {
@@ -146,13 +175,13 @@
 				** (ado, 1993-05-24)
 				*/
 				pt = _conv((t->tm_year + TM_YEAR_BASE) / 100,
-					"%02d", pt, ptlim);
+					"%02d", pt, ptlim, loc);
 				continue;
 			case 'c':
 				{
 				int warn2 = IN_SOME;
 
-				pt = _fmt(tptr->c_fmt, t, pt, ptlim, warnp);
+				pt = _fmt(tptr->c_fmt, t, pt, ptlim, warnp, tptr, loc);
 				if (warn2 == IN_ALL)
 					warn2 = IN_THIS;
 				if (warn2 > *warnp)
@@ -160,10 +189,10 @@
 				}
 				continue;
 			case 'D':
-				pt = _fmt("%m/%d/%y", t, pt, ptlim, warnp);
+				pt = _fmt("%m/%d/%y", t, pt, ptlim, warnp, tptr, loc);
 				continue;
 			case 'd':
-				pt = _conv(t->tm_mday, "%02d", pt, ptlim);
+				pt = _conv(t->tm_mday, "%02d", pt, ptlim, loc);
 				continue;
 			case 'E':
 				if (Ealternative || Oalternative)
@@ -188,21 +217,21 @@
 				Oalternative++;
 				goto label;
 			case 'e':
-				pt = _conv(t->tm_mday, "%2d", pt, ptlim);
+				pt = _conv(t->tm_mday, "%2d", pt, ptlim, loc);
 				continue;
 			case 'F':
-				pt = _fmt("%Y-%m-%d", t, pt, ptlim, warnp);
+				pt = _fmt("%Y-%m-%d", t, pt, ptlim, warnp, tptr, loc);
 				continue;
 			case 'H':
-				pt = _conv(t->tm_hour, "%02d", pt, ptlim);
+				pt = _conv(t->tm_hour, "%02d", pt, ptlim, loc);
 				continue;
 			case 'I':
 				pt = _conv((t->tm_hour % 12) ?
 					(t->tm_hour % 12) : 12,
-					"%02d", pt, ptlim);
+					"%02d", pt, ptlim, loc);
 				continue;
 			case 'j':
-				pt = _conv(t->tm_yday + 1, "%03d", pt, ptlim);
+				pt = _conv(t->tm_yday + 1, "%03d", pt, ptlim, loc);
 				continue;
 			case 'k':
 				/*
@@ -215,7 +244,7 @@
 				** "%l" have been swapped.
 				** (ado, 1993-05-24)
 				*/
-				pt = _conv(t->tm_hour, "%2d", pt, ptlim);
+				pt = _conv(t->tm_hour, "%2d", pt, ptlim, loc);
 				continue;
 #ifdef KITCHEN_SINK
 			case 'K':
@@ -237,13 +266,13 @@
 				*/
 				pt = _conv((t->tm_hour % 12) ?
 					(t->tm_hour % 12) : 12,
-					"%2d", pt, ptlim);
+					"%2d", pt, ptlim, loc);
 				continue;
 			case 'M':
-				pt = _conv(t->tm_min, "%02d", pt, ptlim);
+				pt = _conv(t->tm_min, "%02d", pt, ptlim, loc);
 				continue;
 			case 'm':
-				pt = _conv(t->tm_mon + 1, "%02d", pt, ptlim);
+				pt = _conv(t->tm_mon + 1, "%02d", pt, ptlim, loc);
 				continue;
 			case 'n':
 				pt = _add("\n", pt, ptlim);
@@ -255,14 +284,14 @@
 					pt, ptlim);
 				continue;
 			case 'R':
-				pt = _fmt("%H:%M", t, pt, ptlim, warnp);
+				pt = _fmt("%H:%M", t, pt, ptlim, warnp, tptr, loc);
 				continue;
 			case 'r':
 				pt = _fmt(tptr->ampm_fmt, t, pt, ptlim,
-					warnp);
+					warnp, tptr, loc);
 				continue;
 			case 'S':
-				pt = _conv(t->tm_sec, "%02d", pt, ptlim);
+				pt = _conv(t->tm_sec, "%02d", pt, ptlim, loc);
 				continue;
 			case 's':
 				{
@@ -274,15 +303,15 @@
 					tm = *t;
 					mkt = mktime(&tm);
 					if (TYPE_SIGNED(time_t))
-						(void) sprintf(buf, "%ld",
+						(void) sprintf_l(buf, loc, "%ld",
 							(long) mkt);
-					else	(void) sprintf(buf, "%lu",
+					else	(void) sprintf_l(buf, loc, "%lu",
 							(unsigned long) mkt);
 					pt = _add(buf, pt, ptlim);
 				}
 				continue;
 			case 'T':
-				pt = _fmt("%H:%M:%S", t, pt, ptlim, warnp);
+				pt = _fmt("%H:%M:%S", t, pt, ptlim, warnp, tptr, loc);
 				continue;
 			case 't':
 				pt = _add("\t", pt, ptlim);
@@ -290,7 +319,7 @@
 			case 'U':
 				pt = _conv((t->tm_yday + DAYSPERWEEK -
 					t->tm_wday) / DAYSPERWEEK,
-					"%02d", pt, ptlim);
+					"%02d", pt, ptlim, loc);
 				continue;
 			case 'u':
 				/*
@@ -301,7 +330,7 @@
 				*/
 				pt = _conv((t->tm_wday == 0) ?
 					DAYSPERWEEK : t->tm_wday,
-					"%d", pt, ptlim);
+					"%d", pt, ptlim, loc);
 				continue;
 			case 'V':	/* ISO 8601 week number */
 			case 'G':	/* ISO 8601 year (four digits) */
@@ -380,13 +409,13 @@
 #endif /* defined XPG4_1994_04_09 */
 					if (*format == 'V')
 						pt = _conv(w, "%02d",
-							pt, ptlim);
+							pt, ptlim, loc);
 					else if (*format == 'g') {
 						*warnp = IN_ALL;
 						pt = _conv(year % 100, "%02d",
-							pt, ptlim);
+							pt, ptlim, loc);
 					} else	pt = _conv(year, "%04d",
-							pt, ptlim);
+							pt, ptlim, loc);
 				}
 				continue;
 			case 'v':
@@ -395,26 +424,26 @@
 				** "date as dd-bbb-YYYY"
 				** (ado, 1993-05-24)
 				*/
-				pt = _fmt("%e-%b-%Y", t, pt, ptlim, warnp);
+				pt = _fmt("%e-%b-%Y", t, pt, ptlim, warnp, tptr, loc);
 				continue;
 			case 'W':
 				pt = _conv((t->tm_yday + DAYSPERWEEK -
 					(t->tm_wday ?
 					(t->tm_wday - 1) :
 					(DAYSPERWEEK - 1))) / DAYSPERWEEK,
-					"%02d", pt, ptlim);
+					"%02d", pt, ptlim, loc);
 				continue;
 			case 'w':
-				pt = _conv(t->tm_wday, "%d", pt, ptlim);
+				pt = _conv(t->tm_wday, "%d", pt, ptlim, loc);
 				continue;
 			case 'X':
-				pt = _fmt(tptr->X_fmt, t, pt, ptlim, warnp);
+				pt = _fmt(tptr->X_fmt, t, pt, ptlim, warnp, tptr, loc);
 				continue;
 			case 'x':
 				{
 				int	warn2 = IN_SOME;
 
-				pt = _fmt(tptr->x_fmt, t, pt, ptlim, &warn2);
+				pt = _fmt(tptr->x_fmt, t, pt, ptlim, &warn2, tptr, loc);
 				if (warn2 == IN_ALL)
 					warn2 = IN_THIS;
 				if (warn2 > *warnp)
@@ -424,11 +453,11 @@
 			case 'y':
 				*warnp = IN_ALL;
 				pt = _conv((t->tm_year + TM_YEAR_BASE) % 100,
-					"%02d", pt, ptlim);
+					"%02d", pt, ptlim, loc);
 				continue;
 			case 'Y':
 				pt = _conv(t->tm_year + TM_YEAR_BASE, "%04d",
-					pt, ptlim);
+					pt, ptlim, loc);
 				continue;
 			case 'Z':
 #ifdef TM_ZONE
@@ -476,7 +505,7 @@
 				*/
 				if (t->tm_isdst == 0)
 #ifdef USG_COMPAT
-					diff = -timezone;
+					diff = -_st_get_timezone();
 #else /* !defined USG_COMPAT */
 					continue;
 #endif /* !defined USG_COMPAT */
@@ -494,12 +523,12 @@
 				pt = _add(sign, pt, ptlim);
 				diff /= 60;
 				pt = _conv((diff/60)*100 + diff%60,
-					"%04d", pt, ptlim);
+					"%04d", pt, ptlim, loc);
 				}
 				continue;
 			case '+':
 				pt = _fmt(tptr->date_fmt, t, pt, ptlim,
-					warnp);
+					warnp, tptr, loc);
 				continue;
 			case '%':
 			/*
@@ -519,15 +548,16 @@
 }
 
 static char *
-_conv(n, format, pt, ptlim)
+_conv(n, format, pt, ptlim, loc)
 const int		n;
 const char * const	format;
 char * const		pt;
 const char * const	ptlim;
+locale_t		loc;
 {
 	char	buf[INT_STRLEN_MAXIMUM(int) + 1];
 
-	(void) sprintf(buf, format, n);
+	(void) sprintf_l(buf, loc, format, n);
 	return _add(buf, pt, ptlim);
 }
 
@@ -541,3 +571,4 @@
 		++pt;
 	return pt;
 }
+#endif /* !BUILDING_VARIANT */
