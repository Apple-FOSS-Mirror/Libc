--- bsearch.3.bsdnew	2009-11-13 14:11:47.000000000 -0800
+++ bsearch.3	2009-11-13 14:11:48.000000000 -0800
@@ -32,30 +32,37 @@
 .\"     @(#)bsearch.3	8.3 (Berkeley) 4/19/94
 .\" $FreeBSD: src/lib/libc/stdlib/bsearch.3,v 1.9 2007/01/09 00:28:09 imp Exp $
 .\"
-.Dd April 19, 1994
+.Dd May 20, 2008
 .Dt BSEARCH 3
 .Os
 .Sh NAME
+#ifdef UNIFDEF_BLOCKS
+.Nm bsearch ,
+.Nm bsearch_b
+#else
 .Nm bsearch
+#endif
 .Nd binary search of a sorted table
-.Sh LIBRARY
-.Lb libc
 .Sh SYNOPSIS
 .In stdlib.h
 .Ft void *
-.Fn bsearch "const void *key" "const void *base" "size_t nmemb" "size_t size" "int (*compar) (const void *, const void *)"
+.Fn bsearch "const void *key" "const void *base" "size_t nel" "size_t width" "int (*compar) (const void *, const void *)"
+#ifdef UNIFDEF_BLOCKS
+.Ft void *
+.Fn bsearch_b "const void *key" "const void *base" "size_t nel" "size_t width" "int (^compar) (const void *, const void *)"
+#endif
 .Sh DESCRIPTION
 The
 .Fn bsearch
 function searches an array of
-.Fa nmemb
+.Fa nel
 objects, the initial member of which is
 pointed to by
 .Fa base ,
 for a member that matches the object pointed to by
 .Fa key .
-The size of each member of the array is specified by
-.Fa size .
+The size (in bytes) of each member of the array is specified by
+.Fa width .
 .Pp
 The contents of the array should be in ascending sorted order according
 to the comparison function referenced by
@@ -66,15 +73,33 @@ routine
 is expected to have
 two arguments which point to the
 .Fa key
-object and to an array member, in that order, and should return an integer
+object and to an array member, in that order.
+It should return an integer which is
 less than, equal to, or greater than zero if the
 .Fa key
 object is found, respectively, to be less than, to match, or be
 greater than the array member.
+#ifdef UNIFDEF_BLOCKS
+.Pp
+The
+.Fn bsearch_b
+function is like
+.Fn bsearch
+except the callback
+.Fa compar
+is a block pointer instead of a function pointer.
+#endif
 .Sh RETURN VALUES
 The
 .Fn bsearch
-function returns a pointer to a matching member of the array, or a null
+#ifdef UNIFDEF_BLOCKS
+and
+.Fn bsearch_b
+functions
+#else
+function
+#endif
+returns a pointer to a matching member of the array, or a null
 pointer if no match is found.
 If two members compare as equal, which member is matched is unspecified.
 .Sh SEE ALSO
