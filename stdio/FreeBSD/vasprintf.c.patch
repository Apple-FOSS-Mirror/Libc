--- vasprintf.c.orig	2009-11-30 16:15:30.000000000 -0800
+++ vasprintf.c	2009-12-03 15:19:16.000000000 -0800
@@ -30,20 +30,27 @@
 #include <sys/cdefs.h>
 __FBSDID("$FreeBSD: src/lib/libc/stdio/vasprintf.c,v 1.19 2008/04/17 22:17:54 jhb Exp $");
 
+#include "xlocale_private.h"
+
 #include <stdio.h>
 #include <stdlib.h>
 #include <errno.h>
 #include "local.h"
 
 int
-vasprintf(str, fmt, ap)
+vasprintf_l(str, loc, fmt, ap)
 	char **str;
+	locale_t loc;
 	const char *fmt;
 	__va_list ap;
 {
 	int ret;
 	FILE f;
-
+	struct __sFILEX ext;
+	f._extra = &ext;
+	INITEXTRA(&f);
+	
+	NORMALIZE_LOCALE(loc);
 	f._file = -1;
 	f._flags = __SWR | __SSTR | __SALC;
 	f._bf._base = f._p = (unsigned char *)malloc(128);
@@ -55,7 +62,7 @@ vasprintf(str, fmt, ap)
 	f._bf._size = f._w = 127;		/* Leave room for the NUL */
 	f._orientation = 0;
 	memset(&f._mbstate, 0, sizeof(mbstate_t));
-	ret = __vfprintf(&f, fmt, ap);
+	ret = __vfprintf(&f, loc, fmt, ap);
 	if (ret < 0) {
 		free(f._bf._base);
 		*str = NULL;
@@ -66,3 +73,12 @@ vasprintf(str, fmt, ap)
 	*str = (char *)f._bf._base;
 	return (ret);
 }
+
+int
+vasprintf(str, fmt, ap)
+	char **str;
+	const char *fmt;
+	__va_list ap;
+{
+	return vasprintf_l(str, __current_locale(), fmt, ap);
+}
