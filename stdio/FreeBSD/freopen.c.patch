Index: freopen.c
===================================================================
RCS file: /cvs/root/Libc/stdio/FreeBSD/freopen.c,v
retrieving revision 1.3
diff -u -d -b -w -p -r1.3 freopen.c
--- freopen.c	2004/11/25 19:38:34	1.3
+++ freopen.c	2005/01/25 18:01:26
@@ -99,7 +99,7 @@ freopen(file, mode, fp)
 		    (oflags & O_ACCMODE)) {
 			fclose(fp);
 			FUNLOCKFILE(fp);
-			errno = EINVAL;
+			errno = EBADF;
 			return (NULL);
 		}
 		if ((oflags ^ dflags) & O_APPEND) {
@@ -136,6 +136,8 @@ freopen(file, mode, fp)
 	 * descriptor (if any) was associated with it.  If it was attached to
 	 * a descriptor, defer closing it; freopen("/dev/stdin", "r", stdin)
 	 * should work.  This is unnecessary if it was not a Unix file.
+	 *
+	 * For UNIX03, we always close if it was open.
 	 */
 	if (fp->_flags == 0) {
 		fp->_flags = __SEOF;	/* hold on to it */
@@ -146,11 +148,18 @@ freopen(file, mode, fp)
 		if (fp->_flags & __SWR)
 			(void) __sflush(fp);
 		/* if close is NULL, closing is a no-op, hence pointless */
+#if __DARWIN_UNIX03
+		if (fp->_close)
+			(void) (*fp->_close)(fp->_cookie);
+		isopen = 0;
+		wantfd = -1;
+#else /* !__DARWIN_UNIX03 */
 		isopen = fp->_close != NULL;
 		if ((wantfd = fp->_file) < 0 && isopen) {
 			(void) (*fp->_close)(fp->_cookie);
 			isopen = 0;
 		}
+#endif /* __DARWIN_UNIX03 */
 	}
 
 	/* Get a new descriptor to refer to the new file. */
