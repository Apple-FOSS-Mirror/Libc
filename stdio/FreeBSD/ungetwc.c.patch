--- ungetwc.c.orig	2004-11-25 11:38:35.000000000 -0800
+++ ungetwc.c	2005-02-23 17:38:14.000000000 -0800
@@ -27,6 +27,8 @@
 #include <sys/cdefs.h>
 __FBSDID("$FreeBSD: src/lib/libc/stdio/ungetwc.c,v 1.9 2004/07/20 08:27:27 tjr Exp $");
 
+#include "xlocale_private.h"
+
 #include "namespace.h"
 #include <errno.h>
 #include <stdio.h>
@@ -41,14 +43,14 @@
  * Non-MT-safe version.
  */
 wint_t
-__ungetwc(wint_t wc, FILE *fp)
+__ungetwc(wint_t wc, FILE *fp, locale_t loc)
 {
 	char buf[MB_LEN_MAX];
 	size_t len;
 
 	if (wc == WEOF)
 		return (WEOF);
-	if ((len = __wcrtomb(buf, wc, &fp->_extra->mbstate)) == (size_t)-1) {
+	if ((len = loc->__lc_ctype->__wcrtomb(buf, wc, &fp->_extra->mbstate, loc)) == (size_t)-1) {
 		fp->_flags |= __SERR;
 		return (WEOF);
 	}
@@ -69,7 +71,21 @@
 
 	FLOCKFILE(fp);
 	ORIENT(fp, 1);
-	r = __ungetwc(wc, fp);
+	r = __ungetwc(wc, fp, __current_locale());
+	FUNLOCKFILE(fp);
+
+	return (r);
+}
+
+wint_t
+ungetwc_l(wint_t wc, FILE *fp, locale_t loc)
+{
+	wint_t r;
+
+	NORMALIZE_LOCALE(loc);
+	FLOCKFILE(fp);
+	ORIENT(fp, 1);
+	r = __ungetwc(wc, fp, loc);
 	FUNLOCKFILE(fp);
 
 	return (r);
