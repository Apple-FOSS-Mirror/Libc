--- ungetwc.c.bsdnew	2009-11-11 13:33:18.000000000 -0800
+++ ungetwc.c	2009-11-11 16:30:36.000000000 -0800
@@ -27,6 +27,8 @@
 #include <sys/cdefs.h>
 __FBSDID("$FreeBSD: src/lib/libc/stdio/ungetwc.c,v 1.11 2008/04/17 22:17:54 jhb Exp $");
 
+#include "xlocale_private.h"
+
 #include "namespace.h"
 #include <errno.h>
 #include <limits.h>
@@ -42,14 +44,14 @@ __FBSDID("$FreeBSD: src/lib/libc/stdio/u
  * Non-MT-safe version.
  */
 wint_t
-__ungetwc(wint_t wc, FILE *fp)
+__ungetwc(wint_t wc, FILE *fp, locale_t loc)
 {
 	char buf[MB_LEN_MAX];
 	size_t len;
 
 	if (wc == WEOF)
 		return (WEOF);
-	if ((len = __wcrtomb(buf, wc, &fp->_mbstate)) == (size_t)-1) {
+	if ((len = loc->__lc_ctype->__wcrtomb(buf, wc, &fp->_mbstate, loc)) == (size_t)-1) {
 		fp->_flags |= __SERR;
 		return (WEOF);
 	}
@@ -70,7 +72,21 @@ ungetwc(wint_t wc, FILE *fp)
 
 	FLOCKFILE(fp);
 	ORIENT(fp, 1);
-	r = __ungetwc(wc, fp);
+	r = __ungetwc(wc, fp, __current_locale());
+	FUNLOCKFILE(fp);
+
+	return (r);
+}
+
+wint_t
+ungetwc_l(wint_t wc, FILE *fp, locale_t loc)
+{
+	wint_t r;
+
+	NORMALIZE_LOCALE(loc);
+	FLOCKFILE(fp);
+	ORIENT(fp, 1);
+	r = __ungetwc(wc, fp, loc);
 	FUNLOCKFILE(fp);
 
 	return (r);
