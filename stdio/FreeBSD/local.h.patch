--- local.h.orig	2004-11-25 11:38:35.000000000 -0800
+++ local.h	2005-02-23 17:26:30.000000000 -0800
@@ -37,8 +37,11 @@
  * $FreeBSD: src/lib/libc/stdio/local.h,v 1.26 2004/07/16 05:52:51 tjr Exp $
  */
 
+#include <sys/cdefs.h>
+#include "xlocale_private.h"
 #include <sys/types.h>	/* for off_t */
 #include <pthread.h>
+#include <limits.h>
 #include <string.h>
 #include <wchar.h>
 
@@ -53,8 +56,8 @@
 extern int	_ftello(FILE *, fpos_t *);
 extern int	_fseeko(FILE *, off_t, int, int);
 extern int	__fflush(FILE *fp);
-extern wint_t	__fgetwc(FILE *);
-extern wint_t	__fputwc(wchar_t, FILE *);
+extern wint_t	__fgetwc(FILE *, locale_t);
+extern wint_t	__fputwc(wchar_t, FILE *, locale_t);
 extern int	__sflush(FILE *);
 extern FILE	*__sfp(void);
 extern int	__slbexpand(FILE *, size_t);
@@ -69,16 +72,16 @@
 extern void	__smakebuf(FILE *);
 extern int	__swhatbuf(FILE *, size_t *, int *);
 extern int	_fwalk(int (*)(FILE *));
-extern int	__svfscanf(FILE *, const char *, __va_list);
+extern int	__svfscanf_l(FILE *, locale_t, const char *, __va_list) __DARWIN_LDBL_COMPAT(__svfscanf_l);
 extern int	__swsetup(FILE *);
 extern int	__sflags(const char *, int *);
 extern int	__ungetc(int, FILE *);
-extern wint_t	__ungetwc(wint_t, FILE *);
-extern int	__vfprintf(FILE *, const char *, __va_list);
-extern int	__vfscanf(FILE *, const char *, __va_list);
-extern int	__vfwprintf(FILE *, const wchar_t *, __va_list);
-extern int	__vfwscanf(FILE * __restrict, const wchar_t * __restrict,
-		    __va_list);
+extern wint_t	__ungetwc(wint_t, FILE *, locale_t);
+extern int	__vfprintf(FILE *, locale_t, const char *, __va_list) __DARWIN_LDBL_COMPAT(__vfprintf);
+extern int	__vfscanf(FILE *, const char *, __va_list) __DARWIN_LDBL_COMPAT(__vfscanf);
+extern int	__vfwprintf(FILE *, locale_t, const wchar_t *, __va_list) __DARWIN_LDBL_COMPAT(__vfwprintf);
+extern int	__vfwscanf(FILE * __restrict, locale_t, const wchar_t * __restrict,
+		    __va_list) __DARWIN_LDBL_COMPAT(__vfwscanf);
 
 extern int	__sdidinit;
 
@@ -124,7 +127,7 @@
 
 #define	INITEXTRA(fp) { \
 	(fp)->_extra->_up = NULL; \
-	(fp)->_extra->fl_mutex = PTHREAD_MUTEX_INITIALIZER; \
+	(fp)->_extra->fl_mutex = (pthread_mutex_t)PTHREAD_MUTEX_INITIALIZER; \
 	(fp)->_extra->fl_owner = NULL; \
 	(fp)->_extra->fl_count = 0; \
 	(fp)->_extra->orientation = 0; \
