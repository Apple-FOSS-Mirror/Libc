--- localeconv.c.orig	Tue May 20 15:21:44 2003
+++ localeconv.c	Thu Sep 11 13:52:19 2003
@@ -38,10 +38,66 @@
 #include <sys/cdefs.h>
 __FBSDID("$FreeBSD: src/lib/libc/locale/localeconv.c,v 1.12 2002/10/09 09:19:28 tjr Exp $");
 
+#include <limits.h>
 #include <locale.h>
 #include "lmonetary.h"
 #include "lnumeric.h"
 
+/*------------------------------------------------------------------------
+ * PR-3417676: We need to provide a way to force "C" locale style number
+ * formatting independent of the locale setting.  We provide private
+ * routines to get and set a flag that tells localeconv() to either return
+ * a "C" struct lconv, or the one dependent on the actual locale.
+ *------------------------------------------------------------------------*/
+static char empty[] = "";
+static char numempty[] = { CHAR_MAX, '\0' };
+
+/*
+ * Default (C) locale conversion.
+ */
+static struct lconv _C_lconv = {
+	".",			/* decimal_point */
+	empty,			/* thousands_sep */
+	numempty,		/* grouping */
+	empty,			/* int_curr_symbol */
+	empty,			/* currency_symbol */
+	empty,			/* mon_decimal_point */
+	empty,			/* mon_thousands_sep */
+	numempty,		/* mon_grouping */
+	empty,			/* positive_sign */
+	empty,			/* negative_sign */
+	CHAR_MAX,		/* int_frac_digits */
+	CHAR_MAX,		/* frac_digits */
+	CHAR_MAX,		/* p_cs_precedes */
+	CHAR_MAX,		/* p_sep_by_space */
+	CHAR_MAX,		/* n_cs_precedes */
+	CHAR_MAX,		/* n_sep_by_space */
+	CHAR_MAX,		/* p_sign_posn */
+	CHAR_MAX,		/* n_sign_posn */
+	CHAR_MAX,		/* int_p_cs_precedes */
+	CHAR_MAX,		/* int_n_cs_precedes */
+	CHAR_MAX,		/* int_p_sep_by_space */
+	CHAR_MAX,		/* int_n_sep_by_space */
+	CHAR_MAX,		/* int_p_sign_posn */
+	CHAR_MAX,		/* int_n_sign_posn */
+};
+static int _onlyClocaleconv = 0;
+
+int
+__getonlyClocaleconv(void)
+{
+    return _onlyClocaleconv;
+}
+
+int
+__setonlyClocaleconv(int val)
+{
+    int prev = _onlyClocaleconv;
+
+    _onlyClocaleconv = val;
+    return prev;
+}
+
 /* 
  * The localeconv() function constructs a struct lconv from the current
  * monetary and numeric locales.
@@ -61,6 +117,13 @@
 localeconv()
 {
     static struct lconv ret;
+
+    /*--------------------------------------------------------------------
+     * If _onlyClocaleconv is non-zero, just return __lconv, which is a "C"
+     * struct lconv *.  Otherwise, do the normal thing.
+     *--------------------------------------------------------------------*/
+    if (_onlyClocaleconv)
+	return &_C_lconv;
 
     if (__mlocale_changed) {
 	/* LC_MONETARY part */
