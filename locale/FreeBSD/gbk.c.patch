--- gbk.c.orig	2009-11-09 15:05:25.000000000 -0800
+++ gbk.c	2009-11-09 16:27:30.000000000 -0800
@@ -34,6 +34,8 @@
 #include <sys/cdefs.h>
 __FBSDID("$FreeBSD: src/lib/libc/locale/gbk.c,v 1.14 2007/10/13 16:28:21 ache Exp $");
 
+#include "xlocale_private.h"
+
 #include <sys/types.h>
 #include <errno.h>
 #include <runetype.h>
@@ -42,33 +44,30 @@ __FBSDID("$FreeBSD: src/lib/libc/locale/
 #include <wchar.h>
 #include "mblocal.h"
 
-extern int __mb_sb_limit;
-
 static size_t	_GBK_mbrtowc(wchar_t * __restrict, const char * __restrict,
-		    size_t, mbstate_t * __restrict);
-static int	_GBK_mbsinit(const mbstate_t *);
+		    size_t, mbstate_t * __restrict, locale_t);
+static int	_GBK_mbsinit(const mbstate_t *, locale_t);
 static size_t	_GBK_wcrtomb(char * __restrict, wchar_t,
-		    mbstate_t * __restrict);
+		    mbstate_t * __restrict, locale_t);
 
 typedef struct {
 	wchar_t	ch;
 } _GBKState;
 
-int
-_GBK_init(_RuneLocale *rl)
+__private_extern__ int
+_GBK_init(struct __xlocale_st_runelocale *xrl)
 {
 
-	__mbrtowc = _GBK_mbrtowc;
-	__wcrtomb = _GBK_wcrtomb;
-	__mbsinit = _GBK_mbsinit;
-	_CurrentRuneLocale = rl;
-	__mb_cur_max = 2;
-	__mb_sb_limit = 128;
+	xrl->__mbrtowc = _GBK_mbrtowc;
+	xrl->__wcrtomb = _GBK_wcrtomb;
+	xrl->__mbsinit = _GBK_mbsinit;
+	xrl->__mb_cur_max = 2;
+	xrl->__mb_sb_limit = 128;
 	return (0);
 }
 
 static int
-_GBK_mbsinit(const mbstate_t *ps)
+_GBK_mbsinit(const mbstate_t *ps, locale_t loc __unused)
 {
 
 	return (ps == NULL || ((const _GBKState *)ps)->ch == 0);
@@ -84,7 +83,7 @@ _gbk_check(u_int c)
 
 static size_t
 _GBK_mbrtowc(wchar_t * __restrict pwc, const char * __restrict s, size_t n,
-    mbstate_t * __restrict ps)
+    mbstate_t * __restrict ps, locale_t loc __unused)
 {
 	_GBKState *gs;
 	wchar_t wc;
@@ -144,7 +143,7 @@ _GBK_mbrtowc(wchar_t * __restrict pwc, c
 }
 
 static size_t
-_GBK_wcrtomb(char * __restrict s, wchar_t wc, mbstate_t * __restrict ps)
+_GBK_wcrtomb(char * __restrict s, wchar_t wc, mbstate_t * __restrict ps, locale_t loc __unused)
 {
 	_GBKState *gs;
 
